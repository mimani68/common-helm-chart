image:
  repository: docker.app.io/obc/mock
  tag: 8202d3e
  pullPolicy: IfNotPresent
  imagePullSecrets: []

service:
  type: ClusterIP

ports:
  - name: http
    targetPort: 5000
    protocol: TCP
    port: 80
  # - name: admin
  #   targetPort: 3001
  #   protocol: TCP
  #   port: 3001

podAnnotations: {}

autoscaling:
  enabled: false
  replicaCount: 1
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

liveness: {}
  # httpGet:
  #   path: /
  #   port: http

readiness: {}
  # httpGet:
  #   path: /
  #   port: http
    
volumes: {}
  # - name: config
  #   configMap:
  #     name: mongodb-config
  #     items:
  #       - key: mongod.conf
  #         path: mongod.conf

env:
  - name: name
    value: development

envFrom: {}
  # - configMapRef:
  #     name: env-configmap
  # - secretRef:
  #     name: env-secrets

config: 
  enabled: false
  values: {}
    # php.ini: |
    #   global: true
    # hosts: |
    #   127.0.0.1    localhost
    #   32.12.10.32  google.com
    # resolve.cnf: |
    #   nameserver   9.9.9.9

secret:
  enabled: false
  values: {}
    ## echo "salam" | base64
    ## echo "c2FsYW0K" | base64 -d
    # DB_PASSWORD: c2FsYW0K

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  # requests:
  #   memory: "128Mi"
  #   cpu: "250m"
  limits:
    memory: "250Mi"
    cpu: "150m"

command:
  - npm
  - run
  - start

args: []
  # - --http

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - domain: app.io
      paths: 
      - path: "/app/v1"
        # serviceName: app
        port: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  enabled: false
  name: ""
  create: true
  annotations: {}